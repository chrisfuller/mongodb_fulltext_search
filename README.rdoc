= mongodb_fulltext_search

A gem that adds fulltext search capability to Mongoid[http://mongoid.org/] or MongoMapper[http://mongomapper.com/] documents utilizing the MongoDB[http://mongodb.org/] aggregation framework.

== Prerequisites

Rails must be configured to use either Mongoid or MongoMapper and MongoDB[http://mongodb.org/] version 2.1.0 (or higher) is required.

Please get in touch if youâ€™d like to see added support for another MongoDB object mapper (ODM).

== Installation

  $ gem install mongodb_fulltext_search

== Rails Configuration

Add to Gemfile:

  gem 'mongodb_fulltext_search'

== Indexes

This gem implements indexes specifically for the fulltext search.

The fulltext indexes are maintained automatically via the +before_save+ and +before_destroy+ callbacks on models, however you MUST run the rake task (below) to rebuild the indexes any time your models change.

The indexes are implemented as MongoDB collections (since MongoDB's built-in indexes do not currently support fulltext search), therefore the fulltext indexes are referred to as "index collections" for the rest of this documentation. The "index collections" are stored in the same database that the models are persisted to.

The "index collections" will benefit from using MongoDB indexes themselves. To enable MongoDB indexes on the "index collections", simply use the normal rake command <tt>rake db:mongoid:create_indexes</tt> (or for development or testing, you can activate the auto-creation of indexes if your ODM supports it).

== Examples

TODO: Examples

== Options

TODO: Options

== Rake Tasks

To rebuild indexes for all models:

  $ rake db:mongo:rebuild_fulltext_search_indexes

To rebuild indexes for one model:

  $ rake db:mongo:rebuild_fulltext_search_indexes[Model]

NOTE: The indexes are maintained automatically via the +before_save+ and +before_destroy+ callbacks on models, however you MUST run this rake task any time your models change.

== Copyright

Copyright (c) 2012 Christopher Fuller. See MIT-LICENSE for details.
